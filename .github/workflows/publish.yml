name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  windows_build:
    if: !contains(github.event.head_commit.message, '[ci skip]')
    name: Windows Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'poetry'
      - name: Build
        run: pwsh build.ps1
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: SS13Tools
          path: dist/SS13Tools.exe
          retention-days: 7

  pypi_publish:
    name: Publish on PyPi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'poetry'
      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry build
          poetry publish

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [windows_build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: SS13Tools
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          tag_name: ${{ github.ref }}
          files: SS13Tools.exe

  docker_publish:
    name: Publish on GHCR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Gather Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.action_repository }}
      - name: Authenticate to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
